@using DAL
@using DAL.Entities
@using DAL.Helpers.PageHelpers
@using DAL.Services
@using DAL.CommonModels
@using BSUStudentManagement.CommonCode
@model BasicDataModels

@{
    ViewData["Title"] = "Students Courses";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .search-courses-list {
        padding: 4px;
        list-style: none;
        border-left: 1px solid #dddddd;
        border-right: 1px solid #dddddd;
    }

        .search-courses-list li {
            border-bottom: 1px solid #dddddd;
            padding: 3px;
        }

            .search-courses-list li:hover {
                background-color: #ebe4e48c;
            }

        .search-courses-list a {
            color: #727272;
        }
</style>



<!-- Page Title
============================================= -->
@await Html.PartialAsync("~/Areas/Admin/Views/Shared/_PageSlider.cshtml", new DAL.CommonModels.GeneralData { PageTitle = "Studnet Registered Courses" })
<!-- #page-title end -->
<!-- Content
============================================= -->




<section id="content">

    <div class="content-wrap pb-0">

        <div class="container clearfix">

            <div class="row gutter-40 col-mb-80">

                <!--error message section starts here-->

                <div class="special-div-less-margin">
                    @if (TempData["SuccessMsg"] != null)
                    {
                        if (!String.IsNullOrEmpty(TempData["SuccessMsg"].ToString()))
                        {

                            <div class="style-msg successmsg">
                                <div class="sb-msg"><i class="icon-thumbs-up"></i>@TempData["SuccessMsg"]</div>
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                            </div>
                        }

                    }
                    @if (TempData["ErrorMsg"] != null)
                    {

                        if (!String.IsNullOrEmpty(TempData["ErrorMsg"].ToString()))
                        {
                            <div class="style-msg errormsg">
                                <div class="sb-msg"><i class="icon-remove"></i>@TempData["ErrorMsg"]</div>
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                            </div>
                        }
                    }

                </div>

                <!--error message section ends here-->

                <div class="col-lg-12 " style="padding-bottom: 28px;">
                    <div class="card p-3 bg-light">
                        <div class="car-body">






                            <form method="get" class="row" asp-area="Admin" asp-controller="AdminHome" asp-action="StudentRegisteredCourses" id="search_form" enctype="multipart/form-data">

                                @Html.AntiForgeryToken()



                                <div class="col-md-3 form-group">
                                    <label for="course_id_search">Course ID</label>
                                    <input type="number" id="course_id_search" name="course_id" class="form-control input-sm  valid" value="" aria-invalid="false">

                                </div>

                                <div class="col-md-3  form-group">
                                    <label for="title_search">Course Name</label>

                                    <input type="text" id="title_search" name="title" class="form-control input-sm  valid" value="" aria-invalid="false">
                                </div>


                                <div class="col-md-3 form-group">
                                    <br />


                                    <button type="button" tabindex="3" onclick="SubmitSearchForm();" class="button button-3d button-rounded gradient-blue-green"><i class="icon-search"></i> Search</button>

                                </div>


                            </form>

                        </div>
                    </div>
                </div>

                <div class="special-div-less-margin">
                    <div>


                        <button class="button button-3d button-rounded gradient-grey-orange  float-right" data-toggle="modal" data-target="#myAddModal"><i class="icon-plus"></i> Assign New Course</button>

                    </div>
                </div>

                <div class="postcontent col-lg-12" id="MainDataSection">




                    <div class="table-responsive">
                        <table class="table table-bordered table-hover mb-0">
                            <thead>
                                <tr>

                                    <th>Course ID</th>

                                    <th>Title</th>
                                    <th>Category</th>
                                    <th>Status</th>

                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    if (Model.courses_list.Count() > 0)
                                    {
                                        foreach (var item in Model.courses_list)
                                        {
                                            <tr>
                                                <td>@item.course_id</td>
                                                <td>

                                                    @item.title

                                                </td>
                                                <td>     @item.cousre_category_name</td>
                                                <td>     @item.status_name</td>

                                                <td>
                                                    <div class="justify-content-center">
                                                        <a href="#" class="center" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="icon-edit" style="font-size:23px;"></i></a>
                                                        <ul class="dropdown-menu dropdown-menu-right" style="">
                                                            <li>
                                                                @*<a class="dropdown-item" href="#!" onclick="EditItem('@item.course_id', '@item.title', '@item.course_category_id', '@item.status', '@item.description');" data-toggle="modal" data-target="#myEditModal"><span class="icon-line-plus"></span> Edit</a>*@

                                                                <a class="dropdown-item" href="#!" onclick="DeleteItem('@item.student_course_id');" data-toggle="modal" data-target="#myDeleteModal"><span class="icon-line-delete"></span> Remove Course</a>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </td>

                                            </tr>
                                        }

                                    }
                                }

                            </tbody>
                        </table>
                    </div>

                    <div class="mt-3 ustify-content-end" data-label="pagination-div" style="float:right;">

                         @{
                            if (Model != null && Model.pageHelperObj != null)
                            {
                                PagerHelper ph = new PagerHelper();
                                ph.CurrentPage = Model.pageHelperObj.CurrentPage;
                                ph.TotalRecords = Model.pageHelperObj.TotalRecords;
                                ph.RecordsPerPage = Model.pageHelperObj.RecordsPerPage;

                                ph.AjaxEnabled = true;
                                ph.OnClientClickAjaxCall = "PaginationAfterAjax(this)";

                                @await Html.PartialAsync("~/Views/Shared/_Pager.cshtml", ph)
                            }

                        }

                    </div>




                    <div class="line"></div>



                </div><!-- .postcontent end -->



            </div>


        </div>


    </div>
</section><!-- #content end -->
<!--Save Modal -->
<div class="modal fade" id="myAddModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-body">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Assign Course</h4>

                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>


                @using (Html.BeginForm("AssignNewCourseToStudent", "AdminHome", FormMethod.Post, new { @id = "CourseAdd_form" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="modal-body">




                        <div class="col-12 form-group">
                            <label for="template-course_category_id-name">New Course<small class="text-danger">*</small></label>
                            <input class="sm-form-control border-form-control" autocomplete="off" id="course_title" name="course_title" onkeyup="GetSearchResultByKeyword();" type="text" placeholder="Enter course name" />
                            <input type="hidden" id="course_id" name="course_id" />
                            <input type="hidden" id="student_id_save" name="student_id" value="@ViewBag.student_id" />

                            <ul class="search-courses-list" id="search_courses_list">
                                @*<li>Noor</li>*@

                            </ul>

                        </div>



                    </div>


                    <div class="modal-footer">

                        <button class="button btn-sm button-3d button-rounded gradient-earth" data-dismiss="modal"><i class="icon-lock"></i> Close</button>

                        <button type="submit" tabindex="6" class="button btn-sm button-3d button-rounded gradient-ocean" onclick="return validateCourse();"><i class="icon-save"></i> Save</button>

                    </div>

                }

            </div>
        </div>
    </div>
</div>




<!--Delete Modal -->
<div class="modal fade" id="myDeleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-body">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Remove Course</h4>

                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>

                @using (Html.BeginForm("RemoveStudentFromCourse", "AdminHome", FormMethod.Post, new {area = "Admin", @id = "CourseDelete_form" }))
                {
                    @Html.AntiForgeryToken()


                    <div class="modal-body">



                        <div class="col-12 form-group">
                            <div class="entry-title">
                                <h4><a href="demo-news-single.html">Do you want to remove this course?</a></h4>
                            </div>


                        </div>

                        <div>
                            <input type="hidden" id="student_course_id_delete" name="student_course_id" />
                        </div>


                    </div>


                    <div class="modal-footer">

                        <button class="button btn-sm button-3d button-rounded gradient-earth" data-dismiss="modal"><i class="icon-lock"></i> Cancel</button>

                        <button type="submit" tabindex="1" class="button  btn-sm button-3d button-rounded gradient-horizon"><i class="icon-trash2"></i> Remove</button>

                    </div>

                }

            </div>
        </div>
    </div>
</div>

@section scripts{

<!--Following two scripts are for ajax begin form and other ajax calls-->
    @*<script src="~/Scripts/jquery-3.4.1.js"></script>*@
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>


<script>

       function SubmitSearchForm() {

           var title = $('#title_search').val();
           var course_id = $('#course_id_search').val();

           //--set page id to 1 for first time form submission
           var pageId = 1;

          var Url = '@Url.Action("StudentRegisteredCoursesPartial","AdminHome", new { area="Admin", student_id=ViewBag.student_id})';

           showSearchLoader();


           $.ajax({
               type: "GET",
               url: Url,
               data: { title: title, course_id: course_id, pageId: pageId},
              // datatype: "json",
               cache: false,
               async: false,
               beforeSend: function () {

                   showSearchLoader();
               },
               success: function (data) {

                   hideSearchLoader();

                   $('#MainDataSection').html(data);

               },
               error: function (xhr, ajaxOptions, thrownError) {
                   hideSearchLoader();
                   alert("An error occured. Please try again!");
               }
           })

       }

       function PaginationAfterAjax(thisValue) {
           var title = $('#title_search').val();
           var course_id = $('#course_id_search').val();

           var pageId = $(thisValue).attr('rel');

          
              var Url = '@Url.Action("StudentRegisteredCoursesPartial","AdminHome", new { area="Admin", student_id=ViewBag.student_id})';

           showSearchLoader();
           $.ajax({
               type: "GET",
               url: Url,

               data: { title: title, course_id: course_id, pageId: pageId },
              // datatype: "json",
               cache: false,
               async: false,
               beforeSend: function () {

                   showSearchLoader();
               },
               success: function (data) {
                   hideSearchLoader();
                   $('#MainDataSection').html(data);
               },
               error: function (xhr, ajaxOptions, thrownError) {
                   hideSearchLoader();
                   alert("An error occured. Please try again!");
               }
           })

       }




       function DeleteItem(student_course_id) {
           $('#student_course_id_delete').val(student_course_id);

       }

       //--2: Get search result for drop down by typing in the search box
       function GetSearchResultByKeyword() {
           // debugger
           var course_title = $("#course_title").val();
           $("#course_id").val("");
           var student_id = '@ViewBag.student_id';

           var Url = '/Admin/AdminHome/GetStudentsUnassignCourseList';
           $.ajax({
               type: "get",
               url: Url,
               data: { student_id: student_id, course_title: course_title },
               datatype: "json",
               cache: false,
               async: true,
               success: function (data) {

                   if (data.message != "No data found") {



                       var ListItems = "";
                       var datalength = 0;

                       var ListLength = data.length;

                       if (ListLength > 5) {
                           datalength = 6;
                       } else {
                           datalength = ListLength;
                       }
                       // for (var i = 0; i < data.length; i++)
                       for (var i = 0; i < datalength; i++) {


                           ListItems = ListItems + " " + "<li><a href='#' data-course_id='" + data[i].course_id + "'" + "data-course_title='" + data[i].title + "'" + " onclick='SetSearchBoxValue(this);'" + ">" + data[i].title + "</a></li>"

                       }


                       $('#search_courses_list').html(ListItems);


                   }
                   else {
                       ListItems = "";
                       ListItems = ListItems + " " + "<li><a href='#'>No Such Course Exists</a></li>"
                       $('#search_courses_list').html(ListItems);
                   }

               },
               error: function (xhr, ajaxOptions, thrownError) {

               }
           })
       }

           //--4: set search result in text box by clicking on drop down item
    function SetSearchBoxValue(Param) {

        var course_id = $(Param).attr("data-course_id");
        var course_title = $(Param).attr("data-course_title");

        course_title = course_title.trim();
        $("#course_title").val(course_title);
        $("#course_id").val(course_id);

        //--empty the dropdown
       var emptyList = "";

        $('#search_courses_list').html(emptyList);

       }


       function validateCourse() {

           var course_id = $("#course_id").val();
           if (course_id == undefined || course_id == null || course_id == '' || course_id== ' ' || course_id == '0' || course_id==0) {
               alert("An error occured. Please select full course name again");
               return false;
           } else {
               return true;
           }
       }

</script>



}