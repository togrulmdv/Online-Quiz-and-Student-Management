@using DAL
@using DAL.Entities
@using DAL.Helpers.PageHelpers
@using DAL.Services
@using DAL.CommonModels
@using BSUStudentManagement.CommonCode
@model BasicDataModels

@{
    ViewData["Title"] = "Student Quiz List";
    Layout = "~/Areas/Users/Views/Shared/_Layout.cshtml";
}

<style>
    .portfolio-meta li .resutl-detail {
        width: 50% !important;
    }
</style>


<!-- Page Title
============================================= -->
@await Html.PartialAsync("~/Areas/Users/Views/Shared/_PageSlider.cshtml", new DAL.CommonModels.GeneralData { PageTitle = "Assignment List" })
<!-- #page-title end -->
<!-- Content
============================================= -->



<section id="content">

    <div class="content-wrap pb-0">

        <div class="container clearfix">


            <div class="row gutter-40 col-mb-80">

                <!--error message section starts here-->

                <div class="special-div-less-margin">
                    @if (TempData["SuccessMsg"] != null)
                    {
                        if (!String.IsNullOrEmpty(TempData["SuccessMsg"].ToString()))
                        {

                            <div class="style-msg successmsg">
                                <div class="sb-msg"><i class="icon-thumbs-up"></i>@TempData["SuccessMsg"]</div>
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                            </div>
                        }

                    }
                    @if (TempData["ErrorMsg"] != null)
                    {

                        if (!String.IsNullOrEmpty(TempData["ErrorMsg"].ToString()))
                        {
                            <div class="style-msg errormsg">
                                <div class="sb-msg"><i class="icon-remove"></i>@TempData["ErrorMsg"]</div>
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                            </div>
                        }
                    }

                </div>

                <!--error message section ends here-->

                <div class="col-lg-12 " style="padding-bottom: 28px;">
                    <div class="card p-3 bg-light">
                        <div class="car-body">




                            <form method="get" class="row" asp-area="Users" asp-controller="UserHome" asp-action="StudentAssignmentList" id="search_form" enctype="multipart/form-data">

                                @Html.AntiForgeryToken()



                                <div class="col-md-3 form-group">
                                    <label for="title_search">Assignment Title</label>
                                    <input type="text" id="title_search" name="title" class="form-control input-sm required valid" value="" aria-invalid="false">
                                    <label id="template-contactform-name-error" class="error-message-form" for="template-contactform-name" style="display: none;">error message</label>
                                </div>



                                <div class="col-md-3 form-group">
                                    <br />


                                    <button type="button" tabindex="3" onclick="SubmitSearchForm();" class="button button-3d button-rounded gradient-blue-green"><i class="icon-search"></i> Search</button>

                                </div>


                            </form>
                        </div>
                    </div>
                </div>



                <div class="postcontent col-lg-12" id="MainDataSection">


                    <div class="table-responsive">
                        <table class="table cart table-hover mb-0">
                            <thead>
                                <tr>

                                    <th class="cart-product-name">Title</th>
                                    <th class="cart-product-price">Assignment Status</th>
                                    <th class="cart-product-quantity">Action</th>
                                    <th class="cart-product-quantity">Result</th>

                                </tr>
                            </thead>

                            <tbody>

                                @{
                                    if (Model.assignment_list.Count() > 0)
                                    {
                                        foreach (var item in Model.assignment_list)
                                        {

                                            <tr class="cart_item">

                                                <td>
                                                    @item.title
                                                </td>

                                                <td class="cart-product-price">
                                                    @if (item.status != 0)
                                                    {
                                                        <span class="amount">Active</span>
                                                    }
                                                    else
                                                    {

                                                        <a href="#!" class="button button-3d button-mini button-rounded button-pink "><i class="icon-lock3"></i> Inactive</a>
                                                    }


                                                </td>

                                                <td class="cart-product-quantity">
                                                    @{
                                                        if (item.submit_status == "0")
                                                        {
                                                            if (item.status != 0)
                                                            {

                                                                <a href="#!" onclick="TakeAssignment('@item.assignment_id');" data-toggle="modal" data-target="#TakeQuizModal" class="button button-3d button-mini button-rounded button-purple"><i class="icon-play-circle"></i>Take Assignment</a>
                                                            }
                                                            else
                                                            {
                                                                <!--Make disable then-->

                                                                <a href="#!" class="button button-3d button-mini button-rounded button-pink "><i class="icon-lock3"></i> Inactive</a>
                                                            }

                                                        }
                                                        else//--quiz is submitted by the student
                                                        {


                                                            <a href="#" class="button button-3d button-mini button-rounded button-green"><i class="icon-ok"></i>Submitted</a>

                                                        }
                                                    }

                                                </td>
                                                <td class="cart-product-quantity">
                                                    @if (item.submit_status == "0")
                                                    {
                                                        <a href="#!" onclick="NoResultFound();">View</a>
                                                    }
                                                    else
                                                    {
                                                        if (item.is_checked_by_teacher != 0)
                                                        {
                                                            <a href="#!" onclick="ViewResultStatus('@item.assignment_id');">View</a>
                                                        }
                                                        else
                                                        {
                                                            <a href="#!" onclick="NotChecked();">View</a>
                                                        }

                                                    }

                                                </td>


                                            </tr>
                                        }
                                    }
                                }
                            </tbody>



                        </table>
                    </div>

                    <div class="mt-3 ustify-content-end" data-label="pagination-div" style="float:right;">

                        @{
                            if (Model != null && Model.pageHelperObj != null)
                            {
                                PagerHelper ph = new PagerHelper();
                                ph.CurrentPage = Model.pageHelperObj.CurrentPage;
                                ph.TotalRecords = Model.pageHelperObj.TotalRecords;
                                ph.RecordsPerPage = Model.pageHelperObj.RecordsPerPage;

                                ph.AjaxEnabled = true;
                                ph.OnClientClickAjaxCall = "PaginationAfterAjax(this)";

                                @await Html.PartialAsync("~/Views/Shared/_Pager.cshtml", ph)
                            }

                        }

                    </div>




                    <div class="line"></div>



                </div><!-- .postcontent end -->



            </div>


        </div>


    </div>
</section><!-- #content end -->
<!--Delete Modal -->
<div class="modal fade" id="TakeQuizModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-body">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Start Assignment</h4>

                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>


                <form method="post" class="" asp-area="Users" asp-controller="UserHome" asp-action="StartQuiz" id="start_assignment" enctype="multipart/form-data">

                    @Html.AntiForgeryToken()


                    <div class="modal-body">



                        <div class="col-12 form-group">
                            <div class="entry-title">
                                <h4><a href="demo-news-single.html">Do you want to start this assignment?</a></h4>
                            </div>


                        </div>

                        <div>
                            <input type="hidden" id="assignment_id_take_assign" name="assignment_id" />
                        </div>


                    </div>


                    <div class="modal-footer">

                        <button class="button btn-sm button-3d button-rounded gradient-earth" data-dismiss="modal"><i class="icon-lock"></i> Cancel</button>

                        <button type="button" tabindex="1" onclick="return startAssignment();" class="button btn-sm button-3d button-rounded gradient-ocean"><i class="icon-arrow-alt-circle-right"></i> Start</button>

                    </div>

                </form>

            </div>
        </div>
    </div>
</div>

<!--result detail Modal -->
<div class="modal fade" id="studentResultModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-body">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Result Detail</h4>

                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>



                <form method="post" class="" asp-area="dummyform" asp-controller="dummyform" asp-action="dummyform" id="dummyform" enctype="multipart/form-data">

                    @Html.AntiForgeryToken()

                    <div class="modal-body">



                        <div class="card event-meta">
                            <div class="card-body">
                                <ul class="portfolio-meta mb-0">
                                    <li><span class="resutl-detail"><i class="icon-get-pocket"></i>Total Marks:</span> <a href="#!" id="total_marks"></a></li>
                                    <li><span class="resutl-detail"><i class="icon-ok"></i>Passing Marks:</span> <a href="#!" id="passing_marks"> </a></li>
                                    <li><span class="resutl-detail"> <i class="icon-plus-sign"></i>Gain Marks:</span> <a href="#!" id="gain_marks"></a></li>
                                    <li><span class="resutl-detail"><i class="icon-user"></i>Pass Status:</span> <a href="#!" id="passStatus"></a></li>
                                </ul>
                            </div>
                        </div>


                    </div>


                    <div class="modal-footer">

                        <button class="button btn-sm button-3d button-rounded gradient-earth" data-dismiss="modal"><i class="icon-lock"></i> Close</button>



                    </div>

                </form>
            </div>
        </div>
    </div>
</div>




@section scripts{

<!--Following two scripts are for ajax begin form and other ajax calls-->
    @*<script src="~/Scripts/jquery-3.4.1.js"></script>*@
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>


<script>

     function SubmitSearchForm() {

         var title = $('#title_search').val();
         //--set page id to 1 for first time form submission
         var pageId = 1;

        var course_id = '@ViewBag.course_id';
         if (course_id > 0) {

              var Url = '@Url.Action("StudentAssignmentListPartial","UserHome", new { area="Users"})';
         } else {

              var Url = '@Url.Action("StudentAssignmentListPartial","UserHome", new { area="Users"})';
         }

         
         showSearchLoader();


         $.ajax({
             type: "GET",
             url: Url,
             data: { title: title, pageId:pageId,course_id: course_id  },
            // datatype: "json",
             cache: false,
             async: false,
             beforeSend: function () {

                 showSearchLoader();
             },
             success: function (data) {

                 hideSearchLoader();

                 $('#MainDataSection').html(data);

             },
             error: function (xhr, ajaxOptions, thrownError) {
                 console.log(thrownError);
                 console.log(xhr);
                 debugger

                 hideSearchLoader();
                 alert("An error occured. Please try again!");
             }
         })

     }

     function PaginationAfterAjax(thisValue) {

         var title = $('#title_search').val();
         var pageId = $(thisValue).attr('rel');

    var course_id = '@ViewBag.course_id';
         if (course_id > 0) {

              var Url = '@Url.Action("StudentAssignmentListPartial","UserHome", new { area="Users"})';
         } else {

              var Url = '@Url.Action("StudentAssignmentListPartial","UserHome", new { area="Users"})';
         }



         $.ajax({
             type: "GET",
             url: Url,
             data: { title: title, pageId:pageId,course_id: course_id  },
            // datatype: "json",
             cache: false,
             async: false,
             beforeSend: function () {

                 $("#loader_processes").css("display", "block");
             },
             success: function (data) {
                 $("#loader_processes").css("display", "none");
                 $('#MainDataSection').html(data);
             },
             error: function (xhr, ajaxOptions, thrownError) {
                 $("#loader_processes").css("display", "none");
                 alert("An error occured. Please try again!");
             }
         })

     }

     function TakeAssignment(assignment_id) {

         $('#assignment_id_take_assign').val(assignment_id);
     }
     function startAssignment() {
         var assignment_id = $('#assignment_id_take_assign').val();
         if (assignment_id == "" || assignment_id == " " || assignment_id == undefined) {
             alert("Something went wrong. Please try again.");
             return false;
         } else {
             window.location.href = "/users/home/start-assignment/" + assignment_id;
         }


     }



     function ViewResultStatus(assignment_id) {

         var assignment_id = assignment_id;

         var Url = '/Users/UserHome/GetStudentsAssignmentResultByAssignmentID';
         $.ajax({
             type: "get",
             url: Url,
             data: { assignment_id: assignment_id },
             datatype: "json",
             cache: false,
             async: true,
             success: function (data) {
                 debugger
                 if (data.message == "No data found") {
                   alert("An error occured. Please try again")
                 } else {
                     $('#total_marks').html(data.total_marks);
                     $('#passing_marks').html(data.passing_marks);

                     $('#gain_marks').html(data.gain_marks);
                     if (data.passStatus != "0") {
                         $('#passStatus').html("Pass");
                     } else {
                         $('#passStatus').html("Fail");
                     }

                     $('#studentResultModal').modal('show');
                 }


             },
             error: function (xhr, ajaxOptions, thrownError) {

             }
         })
     }


     function NoResultFound() {
         alert("No Result Found");
     }

     function NotChecked() {
         alert("Your assignment is still not marked by your teacher!");
     }

</script>



}